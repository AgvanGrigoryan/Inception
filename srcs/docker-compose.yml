version: '3.8'

services:
  nginx:
    build:
      context: requirements/nginx
      dockerfile: ./Dockerfile
    container_name: nginx
    secrets:
      - nginx-cert
      - nginx-cert-key
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    networks:
      - my_network
    volumes:
      - wordpress_data:/var/www/wordpress
    restart: on-failure
    depends_on:
      - wordpress
      - static-site

  mariadb:
    build:
      context: requirements/mariadb
      dockerfile: ./Dockerfile
    container_name: mariadb
    restart: on-failure
    secrets:
      - db-root-password
      - db-password
    environment:
      MYSQL_ROOT_PASSWORD_FILE: ${MYSQL_ROOT_PASSWORD_FILE}
      MYSQL_PASSWORD_FILE: ${MYSQL_PASSWORD_FILE}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
    ports:
      - "3306:3306"
    volumes:
      - /home/aggrigor/data/mysql/:/var/lib/mysql
    networks:
      - my_network

  wordpress:
    build:
      context: requirements/wordpress
      dockerfile: ./Dockerfile
      args:
        PHP_VERSION: "8.2"
    container_name: wordpress
    restart: on-failure
    secrets:
      - db-password
      - wp-admin-password
      - wp-default-user-password
    environment:
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD_FILE: ${MYSQL_PASSWORD_FILE}
      WORDPRESS_DB_HOST: mariadb
      WP_URL: ${WP_URL}
      WP_TITLE: ${WP_TITLE}
      WP_ADMIN_USERNAME: ${WP_ADMIN_USERNAME}
      WP_ADMIN_PASSWORD_FILE: ${WP_ADMIN_PASSWORD_FILE}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
      WP_DEFAULT_USER_USERNAME: ${WP_DEFAULT_USER_USERNAME}
      WP_DEFAULT_USER_PASSWORD_FILE: ${WP_DEFAULT_USER_PASSWORD_FILE}
      WP_DEFAULT_USER_EMAIL: ${WP_DEFAULT_USER_EMAIL}
    ports:
      - "9000:9000"
    volumes:
      - wordpress_data:/var/www/wordpress
    networks:
      - my_network
    depends_on:
      - mariadb

  redis:
    build:
      context: requirements/bonus/redis
      dockerfile: ./Dockerfile
    container_name: redis
    restart: on-failure
    ports:
      - "6379:6379"
    networks:
      - my_network

  adminer:
    build:
      context: requirements/bonus/adminer
      dockerfile: ./Dockerfile
    container_name: adminer
    restart: on-failure
    ports:
      - "8080:8080"
    networks:
      - my_network
    depends_on:
      - mariadb

  static-site:
    build:
      context: requirements/bonus/static-site
      dockerfile: ./Dockerfile
    container_name: static-site
    restart: on-failure
    networks:
      - my_network
  
  ftp:
    build:
      context: requirements/bonus/ftp
      dockerfile: ./Dockerfile
    container_name: ftp
    restart: on-failure
    secrets:
      - ftp-password
    environment:
      FTP_USER: ${FTP_USER}
      FTP_PASSWORD_FILE: ${FTP_PASSWORD_FILE}
    volumes:
      - wordpress_data:/var/www/wordpress_data
    ports:
      - "21:21"
      - "10000-10100:10000-10100"
    networks:
      - my_network

  cadvisor:
    build:
      context: requirements/bonus/cadvisor
      dockerfile: ./Dockerfile
    container_name: cadvisor
    restart: on-failure
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro 
      - /sys:/sys:ro 
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "2468:2468"
    networks:
      - my_network


networks:
  my_network:

secrets:
  nginx-cert:
    file: ../secrets/ssl/nginx.crt
  nginx-cert-key:
    file: ../secrets/ssl/nginx.key
  db-root-password:
    file: ../secrets/db_root_password.txt
  db-password:
    file: ../secrets/db_password.txt
  wp-admin-password:
    file: ../secrets/wp-admin-password
  wp-default-user-password:
    file: ../secrets/wp-default-user-password
  ftp-password:
    file: ../secrets/ftp-password

volumes:
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: /home/aggrigor/data/wordpress
      o: bind

  ftp_logs:
    driver: local
    driver_opts:
      type: none
      device: /home/aggrigor/data/ftp
      o: bind
